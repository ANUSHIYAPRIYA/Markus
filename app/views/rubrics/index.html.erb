<%= stylesheet_link_tag("livepipe/tabs") %>
<%= javascript_include_tag "livepipe/livepipe.js" %>
<%= javascript_include_tag "livepipe/window.js" %>
<%= javascript_include_tag "livepipe/tabs.js" %>

<script>

  var modalUpload = null;
  var modalDownload = null;

  function upload_annotations(){
    modalUpload.open();
    return false;
  }

  function download_annotations(){
    modalDownload.open();
    return false;
  }


  document.observe("dom:loaded", function(){
  
    modalUpload = new Control.Modal($('upload_dialog'),
    {
      overlayOpacity: 0.75,
      className: 'modalUpload',
      fade: false
    });

    modalDownload = new Control.Modal($('download_dialog'),
    {
      overlayOpacity: 0.75,
      className: 'modalDownload',
      fade: false
    });
    
  });
</script>

<% if @assignment.past_due_date?%>
 <div class="notice">
   <%=t('past_due_date_warning')%>
 </div>
<% end %>

<div id="title_bar">
  <h1>Rubric Management:  <%= h(sanitize(@assignment.short_identifier)) %>
    
        <%= link_to_function "Add Criterion", %| if($('new_rubric_criterion') != null) {
          $('rubric_criterion_rubric_criterion_name').select();
          $('rubric_criterion_rubric_criterion_name').focus();
        } else {
        #{remote_function :url => {:action => "new", :id => @assignment.id}, :method => 'get'}
        }|%>
   <span class="menu_bar" >|</span>
    <%= button_to_function "Upload", "upload_annotations();"%>
   <span class="menu_bar" >|</span>
    <%= button_to_function "Download", "download_annotations();"%>

  </h1>	
</div><!-- Title bar-->

<div class="wrapLeft">
<% if flash[:upload_notice] && flash[:invalid_lines].empty? -%>
  <div>
    <p class="success"><%= h(flash[:upload_notice]) %></p>
  </div>
<% end -%>
<% if flash[:error] %>
  <div class="error">
    <%= h(flash[:error]) %>
    <% if !flash[:invalid_lines].nil? && !flash[:invalid_lines].empty? %>
      <ul>
        <% flash[:invalid_lines].each do |message| %>
          <li><%=h(message)%></li>
        <% end %>
      </ul>
    <% end %>
  </div>
<% end %>
<p id="criterion_error" class="warning" style="display: none;">

</p>

  <div id="rubric_criteria_pane">
  <!--  Gives controller and instruction
              Views can be dynamic
              Controller: add_action, with the id,
              :with => attach these parameters
              :before => before the counters
              Also passing the number of critieras
        -->
      <div class="rubric_fieldset">
       <div id="rubric_list_title_bar"><span class="criterion_title_div"><b>Criterion</b></span><span class="criterion_weight"><b>Weight</b> (<span id="rubric_total_weight"><%=
h(@assignment.total_criteria_weight) %></span>)</span></div>
      <div class="clear"></div>
      <ul id="rubric_criteria_pane_list">
        <% @criteria.each do |criterion| -%>
          <%= render :partial => "rubrics/rubric_criterion", :locals => {:criterion => criterion} %>
         <% end -%>

    </ul>  <!-- Rubric Criteria Pane -->
  </div>
      <%= sortable_element("rubric_criteria_pane_list", :url => { :action => "update_positions" }) %>		
      
</div><!-- rubric criteria pane-->
<!------------------------------------------------------------------- -->    

    <div id="rubric_levels_pane">
      <div id="rubric_levels_pane_menu">
	<%= render :partial => 'rubric_manager_help' %>
        <div id="rubric_levels_pane_list">
        </div>
    </div><!--rubric level pane --> 
</div>
</div>
<div id="upload_dialog"> 
    <h1>Upload Rubric File</h1>
    <p>
    Select a CSV <!-- or YAML file to upload -->
    <!-- Need a better message
    Select a CSV file of the following form:<br /><br />
    <code>level1_name,level2_name,level3_name,level4_name,level5_name <br />
          criterion,weight,level0_desc,level1_desc,level2_desc,level3_desc,level4_desc<br />
          ...</code><br />-->
    </p>
  
    <p>
      <% form_for :upload_rubric, :url => { :controller=>"rubrics",
                      :action => 'upload_rubric',
                      :id => @assignment.id},
                      :html => {:multipart => true, :size => 1 } do |f| -%>
      <p>
          <%= f.file_field :rubric %>
      </p>
          <p> File type: &nbsp;
            <%= f.radio_button :file_type, "csv", :checked => "checked" %>csv &nbsp;
            <%=# f.radio_button :file_type, "yml" 
               %>
          </p>
      <p>
        <%= f.submit t(:upload), :disable_with => t(:uploading_please_wait) %>
        <input type="reset" value="Cancel" onClick="modalUpload.close();">
      </p>
       <% end %>
    </p>
   
 </div> 
<div id="download_dialog">
      <h2>Download Rubric File</h2>
    <p>What format would you like to download the rubric in?</p>
  
    <ul>
      <li><%= link_to 'Download rubric in CSV Format', {:controller=>"rubrics", :action=>"download_rubric", :format => 'csv', :id=> @assignment.id}%></li>
      <li><%= link_to 'Download rubric in YML Format', {:controller=>"rubrics", :action=>"download_rubric", :format => 'yml', :id=> @assignment.id}%></li>
    </ul>
     <input type="reset" value="Cancel" onClick="modalDownload.close();"> 
</div> 

